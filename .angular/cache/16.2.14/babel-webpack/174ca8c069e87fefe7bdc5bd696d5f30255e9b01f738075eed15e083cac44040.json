{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nlet EditAnswerByUserComponent = class EditAnswerByUserComponent {\n  constructor(deviceDetector, tachlesService, router, activatedRoute) {\n    this.deviceDetector = deviceDetector;\n    this.tachlesService = tachlesService;\n    this.router = router;\n    this.activatedRoute = activatedRoute;\n  }\n  ngOnInit() {\n    window.scrollTo(0, 0);\n    this.activatedRoute.data.subscribe(data => {\n      this.argument = data.argument;\n    });\n    this.argumentID = this.argument._id;\n    this.getAnswerID();\n    this.getSelectedAnswer();\n    this.title = this.argument.title;\n    this.short = this.argument.answers[this.index].short;\n    this.isMobile = this.deviceDetector.isMobile();\n  }\n  getAnswerID() {\n    let url = this.router.url;\n    let splits = url.split(\"/\");\n    this.answerID = splits[splits.length - 1];\n  }\n  submitEditedAnswer(short, full, email) {\n    let tags;\n    let rank = 100;\n    let newAnswer = {\n      short,\n      full,\n      tags,\n      rank\n    };\n    let type = 3;\n    this.tachlesService.submitEditedAnswer(this.argumentID, this.answerID, this.title, newAnswer, tags, type).subscribe(temp => {\n      this.router.navigate(['']);\n    });\n  }\n  getSelectedAnswer() {\n    for (let i = 0; i < this.argument.answers.length; i++) {\n      if (this.argument.answers[i]._id == this.answerID) {\n        this.index = i;\n      }\n    }\n  }\n  hideErrorMessage() {}\n};\nEditAnswerByUserComponent = __decorate([Component({\n  selector: 'app-edit-answer-by-user',\n  templateUrl: './edit-answer-by-user.component.html',\n  styleUrls: ['./edit-answer-by-user.component.scss']\n})], EditAnswerByUserComponent);\nexport { EditAnswerByUserComponent };","map":{"version":3,"names":["Component","EditAnswerByUserComponent","constructor","deviceDetector","tachlesService","router","activatedRoute","ngOnInit","window","scrollTo","data","subscribe","argument","argumentID","_id","getAnswerID","getSelectedAnswer","title","short","answers","index","isMobile","url","splits","split","answerID","length","submitEditedAnswer","full","email","tags","rank","newAnswer","type","temp","navigate","i","hideErrorMessage","__decorate","selector","templateUrl","styleUrls"],"sources":["/Users/librogil/Dropbox/CS/Apps/TACHELES/tacheles/front/src/app/pages/user-actions/edit-answer-by-user/edit-answer-by-user.component.ts"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { TachlesService } from 'src/app/tachles.service';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { Argument } from 'src/app/models/argument.model';\nimport { Location } from '@angular/common';\nimport { Temp } from 'src/app/models/temp.model';\nimport { DeviceDetectorService } from 'src/app/device-detector.service';\n\n@Component({\n  selector: 'app-edit-answer-by-user',\n  templateUrl: './edit-answer-by-user.component.html',\n  styleUrls: ['./edit-answer-by-user.component.scss']\n})\n\nexport class EditAnswerByUserComponent implements OnInit {\n\n  argument: Argument;\n  argumentID: String;\n  answerID: string;\n  short: string;\n  full: string;\n  title: string;\n  id: string;\n  index: number;\n  titleInputCheck: string;\n  fullInputCheck: string;\n  shortInputCheck: string;\n  emailInputCheck: string;\n  isMobile: boolean;\n  \n  constructor(private deviceDetector: DeviceDetectorService, private tachlesService: TachlesService, private router: Router, private activatedRoute: ActivatedRoute) { }\n\n  ngOnInit() {\n    window.scrollTo(0, 0);\n    this.activatedRoute.data.subscribe((data: { argument: Argument }) => {\n      this.argument = data.argument;\n    });\n      this.argumentID = this.argument._id;\n      this.getAnswerID();\n      this.getSelectedAnswer();\n      this.title = this.argument.title;\n      this.short = this.argument.answers[this.index].short;\n      this.isMobile = this.deviceDetector.isMobile();\n  }\n\n  getAnswerID() {\n    let url = this.router.url;\n    let splits = url.split(\"/\");\n    this.answerID = splits[splits.length - 1];\n  }\n\n  submitEditedAnswer(short: string, full: string, email: string) {\n    let tags: string[];\n    let rank = 100;\n    let newAnswer = {short, full, tags, rank};\n    let type = 3;\n\n    this.tachlesService.submitEditedAnswer(this.argumentID, this.answerID, this.title, newAnswer, tags, type).\n    subscribe((temp: Temp) => { this.router.navigate(['']);\n    });\n  }\n\n  getSelectedAnswer() {\n    for (let i = 0; i < this.argument.answers.length; i++) {\n     if (this.argument.answers[i]._id == this.answerID) {\n      this.index = i;\n     }\n    }\n  }\n\n  hideErrorMessage() {\n  }\n}"],"mappings":";AAAA,SAASA,SAAS,QAAgB,eAAe;AAcjD,IAAaC,yBAAyB,GAAtC,MAAaA,yBAAyB;EAgBpCC,YAAoBC,cAAqC,EAAUC,cAA8B,EAAUC,MAAc,EAAUC,cAA8B;IAA7I,KAAAH,cAAc,GAAdA,cAAc;IAAiC,KAAAC,cAAc,GAAdA,cAAc;IAA0B,KAAAC,MAAM,GAANA,MAAM;IAAkB,KAAAC,cAAc,GAAdA,cAAc;EAAoB;EAErKC,QAAQA,CAAA;IACNC,MAAM,CAACC,QAAQ,CAAC,CAAC,EAAE,CAAC,CAAC;IACrB,IAAI,CAACH,cAAc,CAACI,IAAI,CAACC,SAAS,CAAED,IAA4B,IAAI;MAClE,IAAI,CAACE,QAAQ,GAAGF,IAAI,CAACE,QAAQ;IAC/B,CAAC,CAAC;IACA,IAAI,CAACC,UAAU,GAAG,IAAI,CAACD,QAAQ,CAACE,GAAG;IACnC,IAAI,CAACC,WAAW,EAAE;IAClB,IAAI,CAACC,iBAAiB,EAAE;IACxB,IAAI,CAACC,KAAK,GAAG,IAAI,CAACL,QAAQ,CAACK,KAAK;IAChC,IAAI,CAACC,KAAK,GAAG,IAAI,CAACN,QAAQ,CAACO,OAAO,CAAC,IAAI,CAACC,KAAK,CAAC,CAACF,KAAK;IACpD,IAAI,CAACG,QAAQ,GAAG,IAAI,CAAClB,cAAc,CAACkB,QAAQ,EAAE;EAClD;EAEAN,WAAWA,CAAA;IACT,IAAIO,GAAG,GAAG,IAAI,CAACjB,MAAM,CAACiB,GAAG;IACzB,IAAIC,MAAM,GAAGD,GAAG,CAACE,KAAK,CAAC,GAAG,CAAC;IAC3B,IAAI,CAACC,QAAQ,GAAGF,MAAM,CAACA,MAAM,CAACG,MAAM,GAAG,CAAC,CAAC;EAC3C;EAEAC,kBAAkBA,CAACT,KAAa,EAAEU,IAAY,EAAEC,KAAa;IAC3D,IAAIC,IAAc;IAClB,IAAIC,IAAI,GAAG,GAAG;IACd,IAAIC,SAAS,GAAG;MAACd,KAAK;MAAEU,IAAI;MAAEE,IAAI;MAAEC;IAAI,CAAC;IACzC,IAAIE,IAAI,GAAG,CAAC;IAEZ,IAAI,CAAC7B,cAAc,CAACuB,kBAAkB,CAAC,IAAI,CAACd,UAAU,EAAE,IAAI,CAACY,QAAQ,EAAE,IAAI,CAACR,KAAK,EAAEe,SAAS,EAAEF,IAAI,EAAEG,IAAI,CAAC,CACzGtB,SAAS,CAAEuB,IAAU,IAAI;MAAG,IAAI,CAAC7B,MAAM,CAAC8B,QAAQ,CAAC,CAAC,EAAE,CAAC,CAAC;IACtD,CAAC,CAAC;EACJ;EAEAnB,iBAAiBA,CAAA;IACf,KAAK,IAAIoB,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,IAAI,CAACxB,QAAQ,CAACO,OAAO,CAACO,MAAM,EAAEU,CAAC,EAAE,EAAE;MACtD,IAAI,IAAI,CAACxB,QAAQ,CAACO,OAAO,CAACiB,CAAC,CAAC,CAACtB,GAAG,IAAI,IAAI,CAACW,QAAQ,EAAE;QAClD,IAAI,CAACL,KAAK,GAAGgB,CAAC;;;EAGlB;EAEAC,gBAAgBA,CAAA,GAChB;CACD;AA1DYpC,yBAAyB,GAAAqC,UAAA,EANrCtC,SAAS,CAAC;EACTuC,QAAQ,EAAE,yBAAyB;EACnCC,WAAW,EAAE,sCAAsC;EACnDC,SAAS,EAAE,CAAC,sCAAsC;CACnD,CAAC,C,EAEWxC,yBAAyB,CA0DrC;SA1DYA,yBAAyB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}