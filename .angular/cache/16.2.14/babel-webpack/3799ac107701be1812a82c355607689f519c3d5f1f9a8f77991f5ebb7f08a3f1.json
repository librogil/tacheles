{"ast":null,"code":"import * as i0 from \"@angular/core\";\nclass WindowDetectorService {\n  deviceDetector() {\n    if (navigator.userAgent.match(/Android/i) || navigator.userAgent.match(/webOS/i) || navigator.userAgent.match(/iPhone/i) || navigator.userAgent.match(/iPad/i) || navigator.userAgent.match(/iPod/i) || navigator.userAgent.match(/BlackBerry/i) || navigator.userAgent.match(/Windows Phone/i)) {\n      return true;\n    } else {\n      return false;\n    }\n  }\n  isMobile() {\n    if (navigator.userAgent.match(/Android/i) || navigator.userAgent.match(/webOS/i) || navigator.userAgent.match(/iPhone/i) || navigator.userAgent.match(/iPad/i) || navigator.userAgent.match(/iPod/i) || navigator.userAgent.match(/BlackBerry/i) || navigator.userAgent.match(/Windows Phone/i)) {\n      return true;\n    } else {\n      return false;\n    }\n  }\n  setType(type) {\n    this.type = type;\n  }\n  getType() {\n    return this.type;\n  }\n  getMinimumHeight() {\n    return window.innerHeight - 200 + 'px';\n  }\n  constructor() {}\n  static #_ = this.ɵfac = function WindowDetectorService_Factory(t) {\n    return new (t || WindowDetectorService)();\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: WindowDetectorService,\n    factory: WindowDetectorService.ɵfac,\n    providedIn: 'root'\n  });\n}\nexport { WindowDetectorService };","map":{"version":3,"names":["WindowDetectorService","deviceDetector","navigator","userAgent","match","isMobile","setType","type","getType","getMinimumHeight","window","innerHeight","constructor","_","_2","factory","ɵfac","providedIn"],"sources":["/Users/librogil/Dropbox/CS/Apps/TACHELES/tacheles/front/src/app/window-detector.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class WindowDetectorService {\n\n  type: string;\n\n  deviceDetector () {\n\n    if (navigator.userAgent.match(/Android/i)\n      || navigator.userAgent.match(/webOS/i)\n      || navigator.userAgent.match(/iPhone/i)\n      || navigator.userAgent.match(/iPad/i)\n      || navigator.userAgent.match(/iPod/i)\n      || navigator.userAgent.match(/BlackBerry/i)\n      || navigator.userAgent.match(/Windows Phone/i)) {\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n  isMobile () {\n\n    if (navigator.userAgent.match(/Android/i)\n      || navigator.userAgent.match(/webOS/i)\n      || navigator.userAgent.match(/iPhone/i)\n      || navigator.userAgent.match(/iPad/i)\n      || navigator.userAgent.match(/iPod/i)\n      || navigator.userAgent.match(/BlackBerry/i)\n      || navigator.userAgent.match(/Windows Phone/i)) {\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n  setType(type: string) {\n    this.type = type;\n  }\n\n  getType() {\n    return this.type;\n  }\n\n  getMinimumHeight() {\n    return window.innerHeight - 200 + 'px';\n  }\n\n  constructor() { }\n}"],"mappings":";AAEA,MAGaA,qBAAqB;EAIhCC,cAAcA,CAAA;IAEZ,IAAIC,SAAS,CAACC,SAAS,CAACC,KAAK,CAAC,UAAU,CAAC,IACpCF,SAAS,CAACC,SAAS,CAACC,KAAK,CAAC,QAAQ,CAAC,IACnCF,SAAS,CAACC,SAAS,CAACC,KAAK,CAAC,SAAS,CAAC,IACpCF,SAAS,CAACC,SAAS,CAACC,KAAK,CAAC,OAAO,CAAC,IAClCF,SAAS,CAACC,SAAS,CAACC,KAAK,CAAC,OAAO,CAAC,IAClCF,SAAS,CAACC,SAAS,CAACC,KAAK,CAAC,aAAa,CAAC,IACxCF,SAAS,CAACC,SAAS,CAACC,KAAK,CAAC,gBAAgB,CAAC,EAAE;MAChD,OAAO,IAAI;KACZ,MAAM;MACL,OAAO,KAAK;;EAEhB;EAEAC,QAAQA,CAAA;IAEN,IAAIH,SAAS,CAACC,SAAS,CAACC,KAAK,CAAC,UAAU,CAAC,IACpCF,SAAS,CAACC,SAAS,CAACC,KAAK,CAAC,QAAQ,CAAC,IACnCF,SAAS,CAACC,SAAS,CAACC,KAAK,CAAC,SAAS,CAAC,IACpCF,SAAS,CAACC,SAAS,CAACC,KAAK,CAAC,OAAO,CAAC,IAClCF,SAAS,CAACC,SAAS,CAACC,KAAK,CAAC,OAAO,CAAC,IAClCF,SAAS,CAACC,SAAS,CAACC,KAAK,CAAC,aAAa,CAAC,IACxCF,SAAS,CAACC,SAAS,CAACC,KAAK,CAAC,gBAAgB,CAAC,EAAE;MAChD,OAAO,IAAI;KACZ,MAAM;MACL,OAAO,KAAK;;EAEhB;EAEAE,OAAOA,CAACC,IAAY;IAClB,IAAI,CAACA,IAAI,GAAGA,IAAI;EAClB;EAEAC,OAAOA,CAAA;IACL,OAAO,IAAI,CAACD,IAAI;EAClB;EAEAE,gBAAgBA,CAAA;IACd,OAAOC,MAAM,CAACC,WAAW,GAAG,GAAG,GAAG,IAAI;EACxC;EAEAC,YAAA,GAAgB;EAAC,QAAAC,CAAA,G;qBA9CNb,qBAAqB;EAAA;EAAA,QAAAc,EAAA,G;WAArBd,qBAAqB;IAAAe,OAAA,EAArBf,qBAAqB,CAAAgB,IAAA;IAAAC,UAAA,EAFpB;EAAM;;SAEPjB,qBAAqB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}