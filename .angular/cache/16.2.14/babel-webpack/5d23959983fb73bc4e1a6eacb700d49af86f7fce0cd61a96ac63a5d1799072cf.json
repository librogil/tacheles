{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/tachles.service\";\nclass AnswerResolverService {\n  constructor(tachlesService) {\n    this.tachlesService = tachlesService;\n  }\n  resolve(route) {\n    this.answerID = route.paramMap.get('answerID');\n    this.argumentID = route.paramMap.get('argumentID');\n    return this.tachlesService.getSelectedAnswer(this.argumentID, this.answerID);\n  }\n  static #_ = this.ɵfac = function AnswerResolverService_Factory(t) {\n    return new (t || AnswerResolverService)(i0.ɵɵinject(i1.TachlesService));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: AnswerResolverService,\n    factory: AnswerResolverService.ɵfac,\n    providedIn: 'root'\n  });\n}\nexport { AnswerResolverService };","map":{"version":3,"names":["AnswerResolverService","constructor","tachlesService","resolve","route","answerID","paramMap","get","argumentID","getSelectedAnswer","_","i0","ɵɵinject","i1","TachlesService","_2","factory","ɵfac","providedIn"],"sources":["/Users/librogil/Dropbox/CS/Apps/TACHELES/tacheles/front/src/app/pages/user-pages/answer/answer-resolver.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { Resolve, ActivatedRouteSnapshot } from '@angular/router';\nimport { Observable } from 'rxjs'; \nimport { TachlesService } from 'src/app/tachles.service';\nimport { Argument } from 'src/app/models/argument.model';\n\n@Injectable({\n  providedIn: 'root'\n})\n\nexport class AnswerResolverService implements Resolve<Argument> {\n\n  answerID: string;\n  argumentID: string;\n  \n  constructor(private tachlesService: TachlesService) { }\n\n  resolve(route: ActivatedRouteSnapshot): \n  Observable<any> | Promise<any> | Argument {\n    this.answerID = route.paramMap.get('answerID');\n    this.argumentID = route.paramMap.get('argumentID');\n    return this.tachlesService.getSelectedAnswer(this.argumentID, this.answerID);\n  }\n}"],"mappings":";;AAMA,MAIaA,qBAAqB;EAKhCC,YAAoBC,cAA8B;IAA9B,KAAAA,cAAc,GAAdA,cAAc;EAAoB;EAEtDC,OAAOA,CAACC,KAA6B;IAEnC,IAAI,CAACC,QAAQ,GAAGD,KAAK,CAACE,QAAQ,CAACC,GAAG,CAAC,UAAU,CAAC;IAC9C,IAAI,CAACC,UAAU,GAAGJ,KAAK,CAACE,QAAQ,CAACC,GAAG,CAAC,YAAY,CAAC;IAClD,OAAO,IAAI,CAACL,cAAc,CAACO,iBAAiB,CAAC,IAAI,CAACD,UAAU,EAAE,IAAI,CAACH,QAAQ,CAAC;EAC9E;EAAC,QAAAK,CAAA,G;qBAZUV,qBAAqB,EAAAW,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,cAAA;EAAA;EAAA,QAAAC,EAAA,G;WAArBf,qBAAqB;IAAAgB,OAAA,EAArBhB,qBAAqB,CAAAiB,IAAA;IAAAC,UAAA,EAHpB;EAAM;;SAGPlB,qBAAqB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}