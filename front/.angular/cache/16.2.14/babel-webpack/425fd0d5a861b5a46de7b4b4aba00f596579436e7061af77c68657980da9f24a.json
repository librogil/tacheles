{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component, ViewEncapsulation } from '@angular/core';\nlet AnswerComponent = class AnswerComponent {\n  constructor(router, activatedRoute, windowDetector) {\n    this.router = router;\n    this.activatedRoute = activatedRoute;\n    this.windowDetector = windowDetector;\n  }\n  ngOnInit() {\n    window.onbeforeunload = function () {\n      window.scrollTo(0, 0);\n    };\n    this.activatedRoute.data.subscribe(data => {\n      this.argument = data.argument;\n      this.type = this.argument.type;\n    });\n    this.isMobile = this.windowDetector.isMobile();\n    this.minimumHeight = this.windowDetector.getMinimumHeight();\n    this.getAnswerID();\n    this.getSelectedAnswer();\n    this.setStyles();\n    this.getAnswer();\n    this.getSources();\n    console.log(this.answer);\n    console.log(this.sources);\n  }\n  getAnswer() {\n    this.answer = this.argument.answers[0];\n  }\n  getSources() {\n    this.sources = [];\n    for (let i = 0; i < this.answer.sources.length; i++) this.sources[i] = this.answer.sources[i];\n  }\n  getAnswerID() {\n    let url = this.router.url;\n    let splits = url.split(\"/\");\n    this.answerID = splits[splits.length - 1];\n  }\n  getSelectedAnswer() {\n    for (let i = 0; i < this.argument.answers.length; i++) {\n      if (this.argument.answers[i]._id == this.answerID) {\n        this.index = i;\n      }\n    }\n  }\n  setStyles() {\n    this.type = this.argument.type;\n    console.log(this.type);\n    if (this.type == 'false' || this.type == 'true') {\n      this.grayWhite = this.blackWhite = 'white';\n      this.bookIcon = \"./../../../../assets/book-white.svg\";\n      this.linkIcon = \"./../../../../assets/link-white.svg\";\n      this.border = '1px solid white';\n      this.actionButtonBorder = this.dividerBorder = '3px white solid';\n      if (this.type == 'false') {\n        this.backgroundColor = 'var(--red)';\n      } else {\n        this.backgroundColor = 'rgba(17, 95, 164, 1)';\n      }\n    } else {\n      this.grayWhite = 'var(--dark-gray)';\n      this.blackWhite = 'black';\n      this.bookIcon = \"./../../../../assets/book-black.svg\";\n      this.linkIcon = \"./../../../../assets/link-black.svg\";\n      this.border = '1px solid var(--dark-gray)';\n      this.actionButtonBorder = this.dividerBorder = '3px var(--dark-gray) solid';\n    }\n  }\n  editAnswer() {\n    this.router.navigate(['/edit', this.argument._id, this.answerID]);\n  }\n};\nAnswerComponent = __decorate([Component({\n  selector: 'app-answer',\n  templateUrl: './answer.component.html',\n  styleUrls: ['./answer.component.scss'],\n  encapsulation: ViewEncapsulation.None\n})], AnswerComponent);\nexport { AnswerComponent };","map":{"version":3,"names":["Component","ViewEncapsulation","AnswerComponent","constructor","router","activatedRoute","windowDetector","ngOnInit","window","onbeforeunload","scrollTo","data","subscribe","argument","type","isMobile","minimumHeight","getMinimumHeight","getAnswerID","getSelectedAnswer","setStyles","getAnswer","getSources","console","log","answer","sources","answers","i","length","url","splits","split","answerID","_id","index","grayWhite","blackWhite","bookIcon","linkIcon","border","actionButtonBorder","dividerBorder","backgroundColor","editAnswer","navigate","__decorate","selector","templateUrl","styleUrls","encapsulation","None"],"sources":["/Users/librogil/Dropbox/CS/Apps/TACHELES/tacheles/front/src/app/pages/user-pages/answer/answer.component.ts"],"sourcesContent":["import { Component, OnInit, ViewEncapsulation } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { Argument } from 'src/app/models/argument.model';\nimport { WindowDetectorService } from 'src/app/window-detector.service';\n\n@Component({\n  selector: 'app-answer',\n  templateUrl: './answer.component.html',\n  styleUrls: ['./answer.component.scss'],\n  encapsulation: ViewEncapsulation.None,\n})\n\nexport class AnswerComponent implements OnInit {\n\n  isMobile: boolean;\n  minimumHeight: string;\n  type: string;\n\n  argument: Argument;\n  answerID: string;\n  index: number;\n  \n  answers: any[];\n  backgroundColor: string;\n  bookIcon: string;\n  linkIcon: string;\n  border: string;\n  actionButtonColor: string;\n  actionButtonBorder: string;\n  dividerBorder: string;\n  blackWhite: string;\n  grayWhite: string;\n  sources: any[];\n  answer: any;\n\n  constructor(private router: Router, private activatedRoute: ActivatedRoute, private windowDetector: WindowDetectorService) { }\n\n  ngOnInit() {\n    window.onbeforeunload = function() {window.scrollTo(0,0);}\n    this.activatedRoute.data.subscribe((data: { argument: Argument }) => {\n      this.argument = data.argument;\n      this.type = this.argument.type;\n    });\n    this.isMobile = this.windowDetector.isMobile();\n    this.minimumHeight = this.windowDetector.getMinimumHeight();\n    this.getAnswerID();\n    this.getSelectedAnswer();\n    this.setStyles();\n    this.getAnswer();\n    this.getSources();\n    console.log(this.answer);\n    console.log(this.sources);\n  }\n\n  getAnswer() {\n    this.answer = this.argument.answers[0];\n  }\n\n  getSources() {\n    this.sources = [];\n    for (let i = 0; i < this.answer.sources.length; i ++)\n    this.sources[i] = this.answer.sources[i];\n\n  }\n\n  getAnswerID() {\n    let url = this.router.url;\n    let splits = url.split(\"/\");\n    this.answerID = splits[splits.length - 1];\n  }\n\n  getSelectedAnswer() {\n    for (let i = 0; i < this.argument.answers.length; i++) {\n     if (this.argument.answers[i]._id == this.answerID) {\n      this.index = i;\n     }\n    }\n  }\n\n  setStyles() {\n    this.type = this.argument.type;\n    console.log(this.type);\n    if (this.type == 'false' || (this.type == 'true')) {\n      this.grayWhite = this.blackWhite = 'white';\n      this.bookIcon = \"./../../../../assets/book-white.svg\";\n      this.linkIcon = \"./../../../../assets/link-white.svg\";\n      this.border = '1px solid white';\n      this.actionButtonBorder = this.dividerBorder = '3px white solid';\n      if (this.type == 'false') {\n        this.backgroundColor = 'var(--red)';\n      }\n      else {\n        this.backgroundColor = 'rgba(17, 95, 164, 1)';\n      }\n    } else {\n      this.grayWhite = 'var(--dark-gray)';\n      this.blackWhite = 'black';\n      this.bookIcon = \"./../../../../assets/book-black.svg\";\n      this.linkIcon = \"./../../../../assets/link-black.svg\";\n      this.border = '1px solid var(--dark-gray)';\n      this.actionButtonBorder = this.dividerBorder = '3px var(--dark-gray) solid';\n    }\n  }\n\n  editAnswer() {\n    this.router.navigate(['/edit', this.argument._id, this.answerID]);\n  }\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}