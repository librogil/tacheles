{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/api.service\";\nimport * as i2 from \"src/app/window-detector.service\";\nclass ArgumentsListResolverService {\n  constructor(apiService, windowDetector) {\n    this.apiService = apiService;\n    this.windowDetector = windowDetector;\n  }\n  resolve() {\n    return this.apiService.getTrueArguments();\n    /*\n    console.log(this.windowDetector.getType());\n    if ((window.location.href.indexOf(\"false\")) > -1 || (this.windowDetector.getType().includes('false'))){\n      console.log('fff');\n      return this.apiService.getFalseArguments();\n    }\n    else if ((window.location.href.indexOf(\"true\")) > -1 || (this.windowDetector.getType().includes('true'))){\n      console.log('ttt');\n      return this.apiService.getTrueArguments();\n    }\n    else {\n      return this.apiService.getIrrefutableArguments();\n    }\n      */\n  }\n  static #_ = this.ɵfac = function ArgumentsListResolverService_Factory(t) {\n    return new (t || ArgumentsListResolverService)(i0.ɵɵinject(i1.APIService), i0.ɵɵinject(i2.WindowDetectorService));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: ArgumentsListResolverService,\n    factory: ArgumentsListResolverService.ɵfac,\n    providedIn: 'root'\n  });\n}\nexport { ArgumentsListResolverService };","map":{"version":3,"names":["ArgumentsListResolverService","constructor","apiService","windowDetector","resolve","getTrueArguments","_","i0","ɵɵinject","i1","APIService","i2","WindowDetectorService","_2","factory","ɵfac","providedIn"],"sources":["/Users/librogil/Dropbox/CS/Apps/TACHELES/tacheles/front/src/app/pages/user-pages/arguments-list/arguments-list-resolver.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs'; \nimport { Argument } from 'src/app/models/argument.model';\nimport { APIService } from 'src/app/api.service';\nimport { WindowDetectorService } from 'src/app/window-detector.service';\n\n@Injectable({\n  providedIn: 'root'\n})\n\nexport class ArgumentsListResolverService {\n\n  constructor(private apiService: APIService, private windowDetector: WindowDetectorService) { }\n\n  resolve(): \n  Observable<any> | Promise<any> | Argument {\n    return this.apiService.getTrueArguments();\n    \n    /*\n    console.log(this.windowDetector.getType());\n    if ((window.location.href.indexOf(\"false\")) > -1 || (this.windowDetector.getType().includes('false'))){\n      console.log('fff');\n      return this.apiService.getFalseArguments();\n    }\n    else if ((window.location.href.indexOf(\"true\")) > -1 || (this.windowDetector.getType().includes('true'))){\n      console.log('ttt');\n      return this.apiService.getTrueArguments();\n    }\n    else {\n      return this.apiService.getIrrefutableArguments();\n    }\n      */\n  }\n}"],"mappings":";;;AAMA,MAIaA,4BAA4B;EAEvCC,YAAoBC,UAAsB,EAAUC,cAAqC;IAArE,KAAAD,UAAU,GAAVA,UAAU;IAAsB,KAAAC,cAAc,GAAdA,cAAc;EAA2B;EAE7FC,OAAOA,CAAA;IAEL,OAAO,IAAI,CAACF,UAAU,CAACG,gBAAgB,EAAE;IAEzC;;;;;;;;;;;;;;EAcF;EAAC,QAAAC,CAAA,G;qBAtBUN,4BAA4B,EAAAO,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA,GAAAH,EAAA,CAAAC,QAAA,CAAAG,EAAA,CAAAC,qBAAA;EAAA;EAAA,QAAAC,EAAA,G;WAA5Bb,4BAA4B;IAAAc,OAAA,EAA5Bd,4BAA4B,CAAAe,IAAA;IAAAC,UAAA,EAH3B;EAAM;;SAGPhB,4BAA4B","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}