{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/api.service\";\nclass IrrefutableArgumentsResolverService {\n  constructor(apiService) {\n    this.apiService = apiService;\n  }\n  resolve() {\n    return this.apiService.getIrrefutableArguments();\n  }\n  static #_ = this.ɵfac = function IrrefutableArgumentsResolverService_Factory(t) {\n    return new (t || IrrefutableArgumentsResolverService)(i0.ɵɵinject(i1.APIService));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: IrrefutableArgumentsResolverService,\n    factory: IrrefutableArgumentsResolverService.ɵfac,\n    providedIn: 'root'\n  });\n}\nexport { IrrefutableArgumentsResolverService };","map":{"version":3,"names":["IrrefutableArgumentsResolverService","constructor","apiService","resolve","getIrrefutableArguments","_","i0","ɵɵinject","i1","APIService","_2","factory","ɵfac","providedIn"],"sources":["/Users/librogil/Dropbox/CS/Apps/TACHELES/tacheles/front/src/app/pages/user-pages/irrefutable-arguments/irrefutable-arguments-resolver.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { Resolve } from '@angular/router';\nimport { Observable } from 'rxjs'; \nimport { Argument } from 'src/app/models/argument.model';\nimport { APIService } from 'src/app/api.service';\n\n@Injectable({\n  providedIn: 'root'\n})\n\nexport class IrrefutableArgumentsResolverService implements Resolve<Argument> {\n\n  constructor(private apiService: APIService) { }\n\n  resolve(): \n  Observable<any> | Promise<any> | Argument {\n    return this.apiService.getIrrefutableArguments();\n  }\n}"],"mappings":";;AAMA,MAIaA,mCAAmC;EAE9CC,YAAoBC,UAAsB;IAAtB,KAAAA,UAAU,GAAVA,UAAU;EAAgB;EAE9CC,OAAOA,CAAA;IAEL,OAAO,IAAI,CAACD,UAAU,CAACE,uBAAuB,EAAE;EAClD;EAAC,QAAAC,CAAA,G;qBAPUL,mCAAmC,EAAAM,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;EAAA;EAAA,QAAAC,EAAA,G;WAAnCV,mCAAmC;IAAAW,OAAA,EAAnCX,mCAAmC,CAAAY,IAAA;IAAAC,UAAA,EAHlC;EAAM;;SAGPb,mCAAmC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}