{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nclass WebRequestService {\n  constructor(http) {\n    this.http = http;\n    //this.ROOT_URL = \"http://localhost:3000/api\"; // developing\n    this.ROOT_URL = '/api'; // production\n  }\n\n  get(uri) {\n    return this.http.get(`${this.ROOT_URL}/${uri}`);\n  }\n  post(uri, payload) {\n    return this.http.post(`${this.ROOT_URL}/${uri}`, payload);\n  }\n  patch(uri, payload) {\n    return this.http.patch(`${this.ROOT_URL}/${uri}`, payload);\n  }\n  delete(uri) {\n    return this.http.delete(`${this.ROOT_URL}/${uri}`);\n  }\n  login(email, password) {\n    return this.http.post(`${this.ROOT_URL}/users/login`, {\n      email,\n      password\n    }, {\n      observe: 'response'\n    });\n  }\n  signup(email, password) {\n    return this.http.post(`${this.ROOT_URL}/users`, {\n      email,\n      password\n    }, {\n      observe: 'response'\n    });\n  }\n  static #_ = this.ɵfac = function WebRequestService_Factory(t) {\n    return new (t || WebRequestService)(i0.ɵɵinject(i1.HttpClient));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: WebRequestService,\n    factory: WebRequestService.ɵfac,\n    providedIn: 'root'\n  });\n}\nexport { WebRequestService };","map":{"version":3,"names":["WebRequestService","constructor","http","ROOT_URL","get","uri","post","payload","patch","delete","login","email","password","observe","signup","_","i0","ɵɵinject","i1","HttpClient","_2","factory","ɵfac","providedIn"],"sources":["/Users/librogil/Dropbox/CS/Apps/TACHELES/tacheles/front/src/app/web-request.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class WebRequestService {\n\n  readonly ROOT_URL;\n\n  constructor(private http: HttpClient) {\n    //this.ROOT_URL = \"http://localhost:3000/api\"; // developing\n    this.ROOT_URL = '/api'; // production\n  }\n\n  get(uri: string) {\n    return this.http.get(`${this.ROOT_URL}/${uri}`);\n  }\n\n  post(uri: string, payload: Object) {\n    return this.http.post(`${this.ROOT_URL}/${uri}`, payload);\n  }\n\n  patch(uri: string, payload: Object) {\n    return this.http.patch(`${this.ROOT_URL}/${uri}`, payload);\n  }\n\n  delete(uri: string) {\n    return this.http.delete(`${this.ROOT_URL}/${uri}`);\n  }\n\n  login(email: string, password: string) {\n    return this.http.post(`${this.ROOT_URL}/users/login`, {\n      email,\n      password\n    }, {\n        observe: 'response'\n      });\n  }\n\n  signup(email: string, password: string) {\n    return this.http.post(`${this.ROOT_URL}/users`, {\n      email,\n      password\n    }, {\n        observe: 'response'\n      });\n  }\n}"],"mappings":";;AAGA,MAGaA,iBAAiB;EAI5BC,YAAoBC,IAAgB;IAAhB,KAAAA,IAAI,GAAJA,IAAI;IACtB;IACA,IAAI,CAACC,QAAQ,GAAG,MAAM,CAAC,CAAC;EAC1B;;EAEAC,GAAGA,CAACC,GAAW;IACb,OAAO,IAAI,CAACH,IAAI,CAACE,GAAG,CAAC,GAAG,IAAI,CAACD,QAAQ,IAAIE,GAAG,EAAE,CAAC;EACjD;EAEAC,IAAIA,CAACD,GAAW,EAAEE,OAAe;IAC/B,OAAO,IAAI,CAACL,IAAI,CAACI,IAAI,CAAC,GAAG,IAAI,CAACH,QAAQ,IAAIE,GAAG,EAAE,EAAEE,OAAO,CAAC;EAC3D;EAEAC,KAAKA,CAACH,GAAW,EAAEE,OAAe;IAChC,OAAO,IAAI,CAACL,IAAI,CAACM,KAAK,CAAC,GAAG,IAAI,CAACL,QAAQ,IAAIE,GAAG,EAAE,EAAEE,OAAO,CAAC;EAC5D;EAEAE,MAAMA,CAACJ,GAAW;IAChB,OAAO,IAAI,CAACH,IAAI,CAACO,MAAM,CAAC,GAAG,IAAI,CAACN,QAAQ,IAAIE,GAAG,EAAE,CAAC;EACpD;EAEAK,KAAKA,CAACC,KAAa,EAAEC,QAAgB;IACnC,OAAO,IAAI,CAACV,IAAI,CAACI,IAAI,CAAC,GAAG,IAAI,CAACH,QAAQ,cAAc,EAAE;MACpDQ,KAAK;MACLC;KACD,EAAE;MACCC,OAAO,EAAE;KACV,CAAC;EACN;EAEAC,MAAMA,CAACH,KAAa,EAAEC,QAAgB;IACpC,OAAO,IAAI,CAACV,IAAI,CAACI,IAAI,CAAC,GAAG,IAAI,CAACH,QAAQ,QAAQ,EAAE;MAC9CQ,KAAK;MACLC;KACD,EAAE;MACCC,OAAO,EAAE;KACV,CAAC;EACN;EAAC,QAAAE,CAAA,G;qBAzCUf,iBAAiB,EAAAgB,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;EAAA;EAAA,QAAAC,EAAA,G;WAAjBpB,iBAAiB;IAAAqB,OAAA,EAAjBrB,iBAAiB,CAAAsB,IAAA;IAAAC,UAAA,EAFhB;EAAM;;SAEPvB,iBAAiB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}