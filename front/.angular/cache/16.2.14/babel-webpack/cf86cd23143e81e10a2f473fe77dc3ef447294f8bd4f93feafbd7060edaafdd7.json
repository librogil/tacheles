{"ast":null,"code":"import { RouterModule } from '@angular/router';\nimport { HomeComponent } from './pages/user-pages/home/home.component';\nimport { ArgumentsComponent } from './pages/user-pages/arguments/arguments.component';\n//import { ArgumentsResolverService } from './pages/user-pages/arguments/arguments-resolver.service';\nimport { AboutComponent } from './pages/user-pages/about/about.component';\nimport { DictionaryComponent } from './pages/user-pages/dictionary/dictionary.component';\nimport { TrueArgumentsComponent } from './pages/user-pages/true-arguments/true-arguments.component';\nimport { FalseArgumentsComponent } from './pages/user-pages/arguments-list/false-arguments.component';\nimport { IrrefutableArgumentsComponent } from './pages/user-pages/irrefutable-arguments/irrefutable-arguments.component';\nimport { DictionaryResolverService } from './pages/user-pages/dictionary/dictionary-resolver.service';\nimport { FalseArgumentsResolverService } from './pages/user-pages/arguments-list/false-arguments-resolver.service';\nimport { ArgumentComponent } from './pages/user-pages/argument/argument.component';\nimport { AnswerComponent } from './pages/user-pages/answer/answer.component';\nimport { AnswerResolverService } from './pages/user-pages/answer/answer-resolver.service';\nimport { SearchComponent } from './pages/user-pages/search/search.component';\nimport { SearchArgumentsResolverService } from './pages/user-pages/search/search-arguments-resolver.service';\nimport { SearchTermsResolverService } from './pages/user-pages/search/search-terms-resolver.service';\nimport { TermComponent } from './pages/user-pages/term/term.component';\nimport { TermResolverService } from './pages/user-pages/term/term-resolver.service';\nimport { IrrefutableArgumentsResolverService } from './pages/user-pages/irrefutable-arguments/irrefutable-arguments-resolver.service';\nimport { TrueArgumentsResolverService } from './pages/user-pages/true-arguments/true-arguments-resolver.service';\nimport { BackgroundComponent } from './pages/user-pages/background/background.component';\nimport { TodayComponent } from './pages/user-pages/today/today.component';\nimport { NewArgumentByUserComponent } from './pages/user-actions/new-argument-by-user/new-argument-by-user.component';\nimport { EditAnswerByUserComponent } from './pages/user-actions/edit-answer-by-user/edit-answer-by-user.component';\nimport { EditAnswerByUserResolverService } from './pages/user-actions/edit-answer-by-user/edit-answer-by-user-resolver.service';\nimport { NewAnswerByUserResolverService } from './pages/user-actions/new-answer-by-user/new-answer-by-user-resolver.service';\nimport { NewAnswerByUserComponent } from './pages/user-actions/new-answer-by-user/new-answer-by-user.component';\nimport { AddComponent } from './pages/user-pages/add/add.component';\nimport { ArgumentResolverService } from './pages/user-pages/argument/argument-resolver.service';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nconst routes = [{\n  path: 'arguments/:argumentID',\n  component: ArgumentComponent,\n  resolve: {\n    argument: ArgumentResolverService\n  }\n},\n// { path: 'arguments/:argumentID', component: AnswersComponent },\n{\n  path: '',\n  component: HomeComponent\n}, {\n  path: 'about',\n  component: AboutComponent\n}, {\n  path: 'background',\n  component: BackgroundComponent\n}, {\n  path: 'today',\n  component: TodayComponent\n}, {\n  path: 'dictionary',\n  component: DictionaryComponent,\n  resolve: {\n    terms: DictionaryResolverService\n  }\n}, {\n  path: 'arguments',\n  component: ArgumentsComponent\n}, {\n  path: 'false-arguments',\n  component: FalseArgumentsComponent,\n  resolve: {\n    arguments: FalseArgumentsResolverService\n  }\n}, {\n  path: 'new/:argumentID',\n  component: NewAnswerByUserComponent,\n  resolve: {\n    argument: NewAnswerByUserResolverService\n  }\n}, {\n  path: 'add',\n  component: AddComponent\n}, {\n  path: 'new',\n  component: NewArgumentByUserComponent\n}, {\n  path: 'edit/:argumentID/:answerID',\n  component: EditAnswerByUserComponent,\n  resolve: {\n    argument: EditAnswerByUserResolverService\n  }\n}, {\n  path: 'arguments/:argumentID/:answerID',\n  component: AnswerComponent,\n  resolve: {\n    argument: AnswerResolverService\n  }\n}, {\n  path: 'irrefutable-arguments',\n  component: IrrefutableArgumentsComponent,\n  resolve: {\n    arguments: IrrefutableArgumentsResolverService\n  }\n}, {\n  path: 'true-arguments',\n  component: TrueArgumentsComponent,\n  resolve: {\n    arguments: TrueArgumentsResolverService\n  }\n}, {\n  path: 'search/:searchTerm',\n  component: SearchComponent,\n  resolve: {\n    arguments: SearchArgumentsResolverService,\n    terms: SearchTermsResolverService\n  }\n}, {\n  path: 'dictionary/:termID',\n  component: TermComponent,\n  resolve: {\n    term: TermResolverService\n  }\n}];\nclass AppRoutingModule {\n  static #_ = this.ɵfac = function AppRoutingModule_Factory(t) {\n    return new (t || AppRoutingModule)();\n  };\n  static #_2 = this.ɵmod = /*@__PURE__*/i0.ɵɵdefineNgModule({\n    type: AppRoutingModule\n  });\n  static #_3 = this.ɵinj = /*@__PURE__*/i0.ɵɵdefineInjector({\n    imports: [RouterModule.forRoot(routes), RouterModule]\n  });\n}\nexport { AppRoutingModule };\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && i0.ɵɵsetNgModuleScope(AppRoutingModule, {\n    imports: [i1.RouterModule],\n    exports: [RouterModule]\n  });\n})();","map":{"version":3,"names":["RouterModule","HomeComponent","ArgumentsComponent","AboutComponent","DictionaryComponent","TrueArgumentsComponent","FalseArgumentsComponent","IrrefutableArgumentsComponent","DictionaryResolverService","FalseArgumentsResolverService","ArgumentComponent","AnswerComponent","AnswerResolverService","SearchComponent","SearchArgumentsResolverService","SearchTermsResolverService","TermComponent","TermResolverService","IrrefutableArgumentsResolverService","TrueArgumentsResolverService","BackgroundComponent","TodayComponent","NewArgumentByUserComponent","EditAnswerByUserComponent","EditAnswerByUserResolverService","NewAnswerByUserResolverService","NewAnswerByUserComponent","AddComponent","ArgumentResolverService","routes","path","component","resolve","argument","terms","arguments","term","AppRoutingModule","_","_2","_3","forRoot","imports","i1","exports"],"sources":["/Users/librogil/Dropbox/CS/Apps/TACHELES/tacheles/front/src/app/app-routing.module.ts"],"sourcesContent":["import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { HomeComponent } from './pages/user-pages/home/home.component';\nimport { ArgumentsComponent } from './pages/user-pages/arguments/arguments.component';\n//import { ArgumentsResolverService } from './pages/user-pages/arguments/arguments-resolver.service';\n\nimport { AboutComponent } from './pages/user-pages/about/about.component';\nimport { DictionaryComponent } from './pages/user-pages/dictionary/dictionary.component';\nimport { TrueArgumentsComponent } from './pages/user-pages/true-arguments/true-arguments.component';\nimport { FalseArgumentsComponent } from './pages/user-pages/arguments-list/false-arguments.component';\nimport { IrrefutableArgumentsComponent } from './pages/user-pages/irrefutable-arguments/irrefutable-arguments.component';\n\nimport { DictionaryResolverService } from './pages/user-pages/dictionary/dictionary-resolver.service';\nimport { FalseArgumentsResolverService } from './pages/user-pages/arguments-list/false-arguments-resolver.service';\nimport { ArgumentComponent } from './pages/user-pages/argument/argument.component';\nimport { AnswerComponent } from './pages/user-pages/answer/answer.component';\nimport { AnswerResolverService } from './pages/user-pages/answer/answer-resolver.service';\nimport { SearchComponent } from './pages/user-pages/search/search.component';\nimport { SearchArgumentsResolverService } from './pages/user-pages/search/search-arguments-resolver.service';\nimport { SearchTermsResolverService } from './pages/user-pages/search/search-terms-resolver.service';\nimport { TermComponent } from './pages/user-pages/term/term.component';\nimport { TermResolverService } from './pages/user-pages/term/term-resolver.service';\nimport { IrrefutableArgumentsResolverService } from './pages/user-pages/irrefutable-arguments/irrefutable-arguments-resolver.service';\nimport { TrueArgumentsResolverService } from './pages/user-pages/true-arguments/true-arguments-resolver.service';\nimport { BackgroundComponent } from './pages/user-pages/background/background.component';\nimport { TodayComponent } from './pages/user-pages/today/today.component';\nimport { NewArgumentByUserComponent } from './pages/user-actions/new-argument-by-user/new-argument-by-user.component';\nimport { EditAnswerByUserComponent } from './pages/user-actions/edit-answer-by-user/edit-answer-by-user.component';\nimport { EditAnswerByUserResolverService } from './pages/user-actions/edit-answer-by-user/edit-answer-by-user-resolver.service';\nimport { NewAnswerByUserResolverService } from './pages/user-actions/new-answer-by-user/new-answer-by-user-resolver.service';\nimport { NewAnswerByUserComponent } from './pages/user-actions/new-answer-by-user/new-answer-by-user.component';\nimport { AddComponent } from './pages/user-pages/add/add.component';\nimport { ArgumentResolverService } from './pages/user-pages/argument/argument-resolver.service';\n\n\n\nconst routes: Routes = [\n\n\n  { path: 'arguments/:argumentID', component: ArgumentComponent, resolve: { argument: ArgumentResolverService } },\n // { path: 'arguments/:argumentID', component: AnswersComponent },\n\n  { path: '', component: HomeComponent },\n  { path: 'about', component: AboutComponent },\n\n  { path: 'background', component: BackgroundComponent },\n\n  { path: 'today', component: TodayComponent },\n  { path: 'dictionary', component: DictionaryComponent, resolve: {terms: DictionaryResolverService} },\n  { path: 'arguments', component: ArgumentsComponent },\n\n  { path: 'false-arguments', component: FalseArgumentsComponent, resolve: {arguments: FalseArgumentsResolverService} },\n\n  { path: 'new/:argumentID', component: NewAnswerByUserComponent, resolve: { argument: NewAnswerByUserResolverService} },\n  { path: 'add', component: AddComponent },\n  { path: 'new', component: NewArgumentByUserComponent },\n  { path: 'edit/:argumentID/:answerID', component: EditAnswerByUserComponent, resolve: { argument: EditAnswerByUserResolverService} },\n\n\n  { path: 'arguments/:argumentID/:answerID', component: AnswerComponent, resolve: { argument: AnswerResolverService } },\n  { path: 'irrefutable-arguments', component: IrrefutableArgumentsComponent, resolve: {arguments: IrrefutableArgumentsResolverService } },\n  { path: 'true-arguments', component: TrueArgumentsComponent, resolve: {arguments: TrueArgumentsResolverService } },\n\n  { path: 'search/:searchTerm', component: SearchComponent, \n    resolve: {arguments: SearchArgumentsResolverService, terms: SearchTermsResolverService} },\n \n    { path: 'dictionary/:termID', component: TermComponent, resolve: { term: TermResolverService } },\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}