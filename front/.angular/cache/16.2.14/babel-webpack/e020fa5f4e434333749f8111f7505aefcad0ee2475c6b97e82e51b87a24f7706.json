{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/api.service\";\nimport * as i2 from \"src/app/window-detector.service\";\nlet ArgumentsListResolverService = /*#__PURE__*/(() => {\n  class ArgumentsListResolverService {\n    constructor(apiService, windowDetector) {\n      this.apiService = apiService;\n      this.windowDetector = windowDetector;\n    }\n    resolve() {\n      this.type = this.windowDetector.getType();\n      if (this.type) {\n        switch (this.type) {\n          case 'false':\n            return this.apiService.getFalseArguments();\n          case 'true':\n            return this.apiService.getTrueArguments();\n          case 'irrefutable':\n            return this.apiService.getIrrefutableArguments();\n        }\n      }\n      let url = window.location.href;\n      let splits = url.split(\"/\");\n      let type = splits[splits.length - 1];\n      if (type.includes('false')) {\n        return this.apiService.getFalseArguments();\n      }\n      if (type.includes('true')) {\n        return this.apiService.getTrueArguments();\n      }\n      return this.apiService.getIrrefutableArguments();\n    }\n    static #_ = this.ɵfac = function ArgumentsListResolverService_Factory(t) {\n      return new (t || ArgumentsListResolverService)(i0.ɵɵinject(i1.APIService), i0.ɵɵinject(i2.WindowDetectorService));\n    };\n    static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n      token: ArgumentsListResolverService,\n      factory: ArgumentsListResolverService.ɵfac,\n      providedIn: 'root'\n    });\n  }\n  return ArgumentsListResolverService;\n})();\nexport { ArgumentsListResolverService };","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}