{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/api.service\";\nclass DictionaryResolverService {\n  constructor(apiService) {\n    this.apiService = apiService;\n  }\n  resolve(route, state) {\n    return this.apiService.getTerms();\n  }\n  static #_ = this.ɵfac = function DictionaryResolverService_Factory(t) {\n    return new (t || DictionaryResolverService)(i0.ɵɵinject(i1.APIService));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: DictionaryResolverService,\n    factory: DictionaryResolverService.ɵfac,\n    providedIn: 'root'\n  });\n}\nexport { DictionaryResolverService };","map":{"version":3,"names":["DictionaryResolverService","constructor","apiService","resolve","route","state","getTerms","_","i0","ɵɵinject","i1","APIService","_2","factory","ɵfac","providedIn"],"sources":["/Users/librogil/Dropbox/CS/Apps/TACHELES/tacheles/front/src/app/pages/user-pages/dictionary/dictionary-resolver.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { Resolve, ActivatedRouteSnapshot, RouterStateSnapshot } from '@angular/router';\nimport { Term } from 'src/app/models/term.model';\nimport { Observable } from 'rxjs'; \nimport { APIService } from 'src/app/api.service';\n\n@Injectable({\n  providedIn: 'root'\n})\n\nexport class DictionaryResolverService {\n\n  constructor(private apiService: APIService) { }\n\n  resolve(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): \n  Observable<any> | Promise<any> | Term[] {\n    return this.apiService.getTerms();\n  }\n}\n"],"mappings":";;AAMA,MAIaA,yBAAyB;EAEpCC,YAAoBC,UAAsB;IAAtB,KAAAA,UAAU,GAAVA,UAAU;EAAgB;EAE9CC,OAAOA,CAACC,KAA6B,EAAEC,KAA0B;IAE/D,OAAO,IAAI,CAACH,UAAU,CAACI,QAAQ,EAAE;EACnC;EAAC,QAAAC,CAAA,G;qBAPUP,yBAAyB,EAAAQ,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;EAAA;EAAA,QAAAC,EAAA,G;WAAzBZ,yBAAyB;IAAAa,OAAA,EAAzBb,yBAAyB,CAAAc,IAAA;IAAAC,UAAA,EAHxB;EAAM;;SAGPf,yBAAyB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}