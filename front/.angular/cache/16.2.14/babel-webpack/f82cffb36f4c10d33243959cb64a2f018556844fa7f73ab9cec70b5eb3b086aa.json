{"ast":null,"code":"import { RouterModule } from '@angular/router';\nimport { HomeComponent } from './pages/user-pages/home/home.component';\nimport { ArgumentsComponent } from './pages/user-pages/arguments/arguments.component';\nimport { AboutComponent } from './pages/user-pages/about/about.component';\nimport { DictionaryComponent } from './pages/user-pages/dictionary/dictionary.component';\nimport { TrueArgumentsComponent } from './pages/user-pages/true-arguments/true-arguments.component';\nimport { FalseArgumentsComponent } from './pages/user-pages/false-arguments/false-arguments.component';\nimport { IrrefutableArgumentsComponent } from './pages/user-pages/irrefutable-arguments/irrefutable-arguments.component';\nimport { DictionaryResolverService } from './pages/user-pages/dictionary/dictionary-resolver.service';\nimport { FalseArgumentsResolverService } from './pages/user-pages/false-arguments/false-arguments-resolver.service';\nimport { ArgumentComponent } from './pages/user-pages/argument/argument.component';\nimport { ArgumentResolverService } from './pages/user-pages/argument/argument-resolver.service';\nimport { AnswerComponent } from './pages/user-pages/answer/answer.component';\nimport { AnswerResolverService } from './pages/user-pages/answer/answer-resolver.service';\nimport { SearchComponent } from './pages/user-pages/search/search.component';\nimport { SearchArgumentsResolverService } from './pages/user-pages/search/search-arguments-resolver.service';\nimport { SearchTermsResolverService } from './pages/user-pages/search/search-terms-resolver.service';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nconst routes = [{\n  path: 'arguments/:argumentID',\n  component: ArgumentComponent,\n  resolve: {\n    argument: ArgumentResolverService\n  }\n},\n// { path: 'arguments/:argumentID', component: AnswersComponent },\n{\n  path: '',\n  component: HomeComponent\n}, {\n  path: 'about',\n  component: AboutComponent\n}, {\n  path: 'dictionary',\n  component: DictionaryComponent,\n  resolve: {\n    terms: DictionaryResolverService\n  }\n}, {\n  path: 'arguments',\n  component: ArgumentsComponent\n}, {\n  path: 'false-arguments',\n  component: FalseArgumentsComponent,\n  resolve: {\n    arguments: FalseArgumentsResolverService\n  }\n},\n/*\n  { path: 'arguments/false/a', component: AnswersFalseComponent },\n\n  { path: 'arguments/false/b', component: AnswerFalseComponent },\n\n  { path: 'arguments/false', component: FalseArgumentsComponent, resolve: {arguments: FalseArgumentsResolverService} },\n\n  {\n  */\n{\n  path: 'arguments/:argumentID/:answerID',\n  component: AnswerComponent,\n  resolve: {\n    argument: AnswerResolverService\n  }\n}, {\n  path: 'irrefutable-arguments',\n  component: IrrefutableArgumentsComponent\n}, {\n  path: 'true-arguments',\n  component: TrueArgumentsComponent\n}, {\n  path: 'search/:searchTerm',\n  component: SearchComponent,\n  resolve: {\n    arguments: SearchArgumentsResolverService,\n    terms: SearchTermsResolverService\n  }\n}];\nclass AppRoutingModule {\n  static #_ = this.ɵfac = function AppRoutingModule_Factory(t) {\n    return new (t || AppRoutingModule)();\n  };\n  static #_2 = this.ɵmod = /*@__PURE__*/i0.ɵɵdefineNgModule({\n    type: AppRoutingModule\n  });\n  static #_3 = this.ɵinj = /*@__PURE__*/i0.ɵɵdefineInjector({\n    imports: [RouterModule.forRoot(routes), RouterModule]\n  });\n}\nexport { AppRoutingModule };\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && i0.ɵɵsetNgModuleScope(AppRoutingModule, {\n    imports: [i1.RouterModule],\n    exports: [RouterModule]\n  });\n})();","map":{"version":3,"names":["RouterModule","HomeComponent","ArgumentsComponent","AboutComponent","DictionaryComponent","TrueArgumentsComponent","FalseArgumentsComponent","IrrefutableArgumentsComponent","DictionaryResolverService","FalseArgumentsResolverService","ArgumentComponent","ArgumentResolverService","AnswerComponent","AnswerResolverService","SearchComponent","SearchArgumentsResolverService","SearchTermsResolverService","routes","path","component","resolve","argument","terms","arguments","AppRoutingModule","_","_2","_3","forRoot","imports","i1","exports"],"sources":["/Users/librogil/Dropbox/CS/Apps/TACHELES/tacheles/front/src/app/app-routing.module.ts"],"sourcesContent":["import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { HomeComponent } from './pages/user-pages/home/home.component';\nimport { ArgumentsComponent } from './pages/user-pages/arguments/arguments.component';\nimport { ArgumentsResolverService } from './pages/user-pages/arguments/arguments-resolver.service';\n\nimport { AboutComponent } from './pages/user-pages/about/about.component';\nimport { DictionaryComponent } from './pages/user-pages/dictionary/dictionary.component';\nimport { TrueArgumentsComponent } from './pages/user-pages/true-arguments/true-arguments.component';\nimport { FalseArgumentsComponent } from './pages/user-pages/false-arguments/false-arguments.component';\nimport { IrrefutableArgumentsComponent } from './pages/user-pages/irrefutable-arguments/irrefutable-arguments.component';\nimport { AnswersFalseComponent } from './pages/user-pages/answers-false/answers-false.component';\nimport { AnswerFalseComponent } from './pages/user-pages/answer-false/answer-false.component';\nimport { DictionaryResolverService } from './pages/user-pages/dictionary/dictionary-resolver.service';\nimport { FalseArgumentsResolverService } from './pages/user-pages/false-arguments/false-arguments-resolver.service';\nimport { ArgumentComponent } from './pages/user-pages/argument/argument.component';\nimport { ArgumentResolverService } from './pages/user-pages/argument/argument-resolver.service';\nimport { AnswerComponent } from './pages/user-pages/answer/answer.component';\nimport { AnswerResolverService } from './pages/user-pages/answer/answer-resolver.service';\nimport { SearchComponent } from './pages/user-pages/search/search.component';\nimport { SearchArgumentsResolverService } from './pages/user-pages/search/search-arguments-resolver.service';\nimport { SearchTermsResolverService } from './pages/user-pages/search/search-terms-resolver.service';\n\n\n\nconst routes: Routes = [\n\n\n  { path: 'arguments/:argumentID', component: ArgumentComponent, resolve: { argument: ArgumentResolverService } },\n // { path: 'arguments/:argumentID', component: AnswersComponent },\n\n  { path: '', component: HomeComponent },\n  { path: 'about', component: AboutComponent },\n  { path: 'dictionary', component: DictionaryComponent, resolve: {terms: DictionaryResolverService} },\n  { path: 'arguments', component: ArgumentsComponent },\n\n  { path: 'false-arguments', component: FalseArgumentsComponent, resolve: {arguments: FalseArgumentsResolverService} },\n\n/*\n  { path: 'arguments/false/a', component: AnswersFalseComponent },\n\n  { path: 'arguments/false/b', component: AnswerFalseComponent },\n\n  { path: 'arguments/false', component: FalseArgumentsComponent, resolve: {arguments: FalseArgumentsResolverService} },\n\n  { \n  */\n  { path: 'arguments/:argumentID/:answerID', component: AnswerComponent, resolve: { argument: AnswerResolverService } },\n  { path: 'irrefutable-arguments', component: IrrefutableArgumentsComponent },\n  { path: 'true-arguments', component: TrueArgumentsComponent },\n\n  { path: 'search/:searchTerm', component: SearchComponent, \n    resolve: {arguments: SearchArgumentsResolverService, terms: SearchTermsResolverService} },\n \n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n"],"mappings":"AACA,SAASA,YAAY,QAAgB,iBAAiB;AACtD,SAASC,aAAa,QAAQ,wCAAwC;AACtE,SAASC,kBAAkB,QAAQ,kDAAkD;AAGrF,SAASC,cAAc,QAAQ,0CAA0C;AACzE,SAASC,mBAAmB,QAAQ,oDAAoD;AACxF,SAASC,sBAAsB,QAAQ,4DAA4D;AACnG,SAASC,uBAAuB,QAAQ,8DAA8D;AACtG,SAASC,6BAA6B,QAAQ,0EAA0E;AAGxH,SAASC,yBAAyB,QAAQ,2DAA2D;AACrG,SAASC,6BAA6B,QAAQ,qEAAqE;AACnH,SAASC,iBAAiB,QAAQ,gDAAgD;AAClF,SAASC,uBAAuB,QAAQ,uDAAuD;AAC/F,SAASC,eAAe,QAAQ,4CAA4C;AAC5E,SAASC,qBAAqB,QAAQ,mDAAmD;AACzF,SAASC,eAAe,QAAQ,4CAA4C;AAC5E,SAASC,8BAA8B,QAAQ,6DAA6D;AAC5G,SAASC,0BAA0B,QAAQ,yDAAyD;;;AAIpG,MAAMC,MAAM,GAAW,CAGrB;EAAEC,IAAI,EAAE,uBAAuB;EAAEC,SAAS,EAAET,iBAAiB;EAAEU,OAAO,EAAE;IAAEC,QAAQ,EAAEV;EAAuB;AAAE,CAAE;AAChH;AAEC;EAAEO,IAAI,EAAE,EAAE;EAAEC,SAAS,EAAElB;AAAa,CAAE,EACtC;EAAEiB,IAAI,EAAE,OAAO;EAAEC,SAAS,EAAEhB;AAAc,CAAE,EAC5C;EAAEe,IAAI,EAAE,YAAY;EAAEC,SAAS,EAAEf,mBAAmB;EAAEgB,OAAO,EAAE;IAACE,KAAK,EAAEd;EAAyB;AAAC,CAAE,EACnG;EAAEU,IAAI,EAAE,WAAW;EAAEC,SAAS,EAAEjB;AAAkB,CAAE,EAEpD;EAAEgB,IAAI,EAAE,iBAAiB;EAAEC,SAAS,EAAEb,uBAAuB;EAAEc,OAAO,EAAE;IAACG,SAAS,EAAEd;EAA6B;AAAC,CAAE;AAEtH;;;;;;;;;AASE;EAAES,IAAI,EAAE,iCAAiC;EAAEC,SAAS,EAAEP,eAAe;EAAEQ,OAAO,EAAE;IAAEC,QAAQ,EAAER;EAAqB;AAAE,CAAE,EACrH;EAAEK,IAAI,EAAE,uBAAuB;EAAEC,SAAS,EAAEZ;AAA6B,CAAE,EAC3E;EAAEW,IAAI,EAAE,gBAAgB;EAAEC,SAAS,EAAEd;AAAsB,CAAE,EAE7D;EAAEa,IAAI,EAAE,oBAAoB;EAAEC,SAAS,EAAEL,eAAe;EACtDM,OAAO,EAAE;IAACG,SAAS,EAAER,8BAA8B;IAAEO,KAAK,EAAEN;EAA0B;AAAC,CAAE,CAE5F;AAED,MAIaQ,gBAAgB;EAAA,QAAAC,CAAA,G;qBAAhBD,gBAAgB;EAAA;EAAA,QAAAE,EAAA,G;UAAhBF;EAAgB;EAAA,QAAAG,EAAA,G;cAHjB3B,YAAY,CAAC4B,OAAO,CAACX,MAAM,CAAC,EAC5BjB,YAAY;EAAA;;SAEXwB,gBAAgB;;2EAAhBA,gBAAgB;IAAAK,OAAA,GAAAC,EAAA,CAAA9B,YAAA;IAAA+B,OAAA,GAFjB/B,YAAY;EAAA;AAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}